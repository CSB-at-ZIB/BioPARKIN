package group;

/**
 * The Klein's four - group: a commutative group consisting of four elements
 * isomorphic to <code>Z/2Z + Z/2Z</code> generated by to non-trivial elements <tt>A, B</tt>, where:
 * <p><tt>A^2 = B^2 = E</tt> and <tt>(A B)^2 = E</tt></p>
 * @author bzfmuell
 *
 */
public final class Klein4Group extends AbelCompGrp<Klein4Group> {
	/**the neutral element*/
	public static final Klein4Group E = new Klein4Group ("E");
	/**one of the two generators named 'A'*/
	public static final Klein4Group A = new Klein4Group ("A");
	/**one of the two generators named 'B'*/
	public static final Klein4Group B = new Klein4Group ("B");
	/**one of the two generators named 'C'*/
	public static final Klein4Group C = new Klein4Group ("C");
	/**the name string of the element*/
	private String name;
	/**
	 * Private constructor: prevents instantiation of an object
	 * of this class - takes the name string as argument
	 * @param name the name string
	 */
	private Klein4Group (String name){super();this.name = name;}
	
	public Klein4Group add(Klein4Group another) {
		if(equals(E)&&another.equals(E)) return E;
		if((equals(A)&&another.equals(A))) return E;
		if((equals(B)&&another.equals(B))) return E;
		if((equals(C)&&another.equals(C))) return E;
		if((equals(E)&&another.equals(A))||(equals(A)&&another.equals(E))) return A;
		if((equals(E)&&another.equals(B))||(equals(B)&&another.equals(E))) return B;
		if((equals(E)&&another.equals(C))||(equals(C)&&another.equals(E))) return C;
		if((equals(A)&&another.equals(B))||(equals(B)&&another.equals(A))) return C;
		if((equals(A)&&another.equals(C))||(equals(C)&&another.equals(A))) return B;
		return A;
	}
	/**
	 * Performs comparison according to the following
	 * ordering scheme:
	 * <p><tt>E < A < B < C</tt>
	 */
	public int compareTo(Klein4Group another){
		if(equals(E)&&!another.equals(E)) return -1;
		if(!equals(E)&&another.equals(E)) return 1;
		if(equals(A)&&(another.equals(B)||another.equals(C))) return -1;
		if((equals(B)||equals(C))&&another.equals(A)) return 1;
		if(equals(B)&&another.equals(C)) return -1;
		if(equals(C)&&another.equals(B)) return 1;
		return 0;
	}
	/**
	 * Returns true if and only if both name strings
	 * match
	 */
	public boolean equals(Klein4Group another) {
		return name.matches(another.name)?true:false;
	}
	/**
	 * Returns a string representation of this instance
	 * of the class
	 *  @return the name string
	 */
	public String toString (){return name;}

}
